#!/bin/bash

cd "$nom"

proj_name=$(tiobj @.sysobj.ti get name)
if [ $(node "@$nom" is "o2cl") ]; then
	o2cl_name="$proj_name"
	proj_name="o2cl-$proj_name"
fi


brief=$(tiobj @.sysobj.ti get brief)
description=$(tiobj @.sysobj.ti get description)
prefix_install=$(tiobj @.sysobj.ti get prefix_install)

if [ "$install_prefix" == "" ]; then
	install_prefix="/local/usr"
fi

mkdir -p "debian"
cd "debian"


proj_version="1.0.0" #$(proj version | tr -d v);

# create changelog
echo "$proj_name ($proj_version) UNRELEASED; urgency=medium" > "changelog"
echo "" >> "changelog"
echo "  * Initial release. (Closes: #1)"       >> "changelog"
echo "" >> "changelog"
echo " -- Felipe Bombardelli <felipebombardelli@gmail.com>  Wed, 16 Mar 2016 14:42:02 -0300" >> "changelog"


# create rules
cp "$class_url/etc/lib/rules" "rules"
echo "" >> "rules"
echo "override_dh_auto_configure:" >> "rules"
if [ $(node "@../" is "o2cl") ]; then
	echo "	dh_auto_configure -- -DCMAKE_INSTALL_PREFIX='/o2cl/class/$o2cl_name'" >> "rules"
else
	echo "	dh_auto_configure -- -DCMAKE_INSTALL_PREFIX='$install_prefix'" >> "rules"
fi

# create compat
cp "$class_url/etc/lib/compat" "compat"

# create copyright
echo "" > "copyright"



echo "Source:  $proj_name" > control
echo 'Priority: extra' >> control
echo 'Maintainer: felipebombardelli <felipebombardelli@gmail.com>' >> control
echo 'Build-Depends: debhelper (>= 7.0.50~), autotools-dev' >> control
echo "Standards-Version: $proj_version" >> control

if [ $(node "@../" is "lib") ]; then
	echo 'Section: libs' >> control

	# Package with includes (-dev)
	echo "" >> control
	echo "Package:  $proj_name-dev" >> control
	echo 'Section: libdevel' >> control
	echo 'Architecture: any' >> control
	echo "Depends: $proj_name (= \${binary:Version})" >> control
	echo "Description: $brief" >> control
	echo ' insert long description, indented with spaces' >> control
	cp "$class_url/etc/lib/dev-install" "$proj_name-dev.install" || exit 1

	# Package with .so
	echo "" >> control
	echo "Package:  $proj_name" >> control
	echo 'Section: libs' >> control
	echo 'Architecture: any' >> control
	echo 'Depends: ${shlibs:Depends}, ${misc:Depends}' >> control
	echo "Description: $brief" >> control
	echo ' insert long description, indented with spaces' >> control
	cp "$class_url/etc/lib/install"  "$proj_name.install"  || exit 1
	cp "$class_url/etc/lib/postinst" "$proj_name.postinst" || exit 1
elif [ $(node "@../" is "o2cl") ]; then

	echo "" >> control
	echo "Package:  $proj_name" >> control
	echo 'Section: o2cl' >> control
	echo 'Architecture: any' >> control
	echo 'Depends: ${shlibs:Depends}, ${misc:Depends}' >> control
	echo "Description: $brief" >> control
	echo ' insert long description, indented with spaces' >> control
	
	
	echo "#!/bin/bash"            > postinst
	echo "cd \"/o2cl/bin\""      >> postinst
	echo "ln \"o2cl\" \"$o2cl_name\""  >> postinst

	echo "#!/bin/bash"                   > postrm
	echo "rm \"/o2cl/bin/$o2cl_name\""  >> postrm
fi




cd ..
#if [ ! -e "$proj_name-1.0" ]; then
#	ln -s "../../" "$proj_name-1.0"
#fi
debuild -b -us -uc || exit 1
package_name="${proj_name}_${proj_version}_amd64"
mv "../$package_name.deb"     "app/"      || exit 1
mv "../$package_name.build"   "app/"      || exit 1
mv "../$package_name.changes" "app/"      || exit 1

if [ $(node "@../" is "lib") ]; then
	mv "../${proj_name}-dev_${proj_version}_amd64.deb" "app/"  || exit 1
fi
